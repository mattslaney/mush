# mush
A lightweight file and directory syncing application written in rust

# Usage
## CLI
```
mush 0.1.0
Matt Slaney

USAGE:
    mush [FLAGS] [OPTIONS]

FLAGS:
    -h, --help          Prints help information
    -v, --version       Prints version information
    -a, --auto          Continually sync files and folders
    -f, --force         Syncs by force
        --silent        Show no user prompts
        --no-ignore     Disregards the ignore file and syncs everything

OPTIONS:
    -c, --config <FILE> Location of config file
        --src <PATH>    Destination to sync from
        --dst <PATH>    Destination to sync to
    -m, --mode <ENUM>
                BIDIR  (Default) Bi-directional sync between two folders Mirror sync one way source to destination
                MIRROR



COMMANDS:
    all                 Sync all tracked sources
    init                Init a directory for syncing
    status              Status of the sync
    list                List all files that need syncing
    push                Sync this folder with the destination
    pull                Pull changes from the destination
    add                 Add folder to tracked sources
    remove              Remove folder from tracked sources
    delete              Delete


EXAMPLES:
    # Single use examples with any folder
    - Sync two folders bidirectionally
    mush -b --src ~/dir1 ~/dir2

    - Mirror one folder to another
    mush -m --src ~/dir1 --dst ~/dir2

    # Examples for folders that have been initialised
    - Set up this folder as a source (initialise)
    mush init -dst ~/dir2

    - Sync this folder automatically in the background
    mush -a &

    # Top level examples for sync operations against all tracked sources
    - Sync all tracked sourced
    mush all

    - Sync all tracked sources in the background automatically
    mush all -a &
```

## Service
Register as a service, typically utilising the mushfg.toml

# Config
